// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import { type ColumnType, type Selectable, type Insertable, type Updateable } from 'kysely';

/** Identifier type for public.StakingEvent */
export type StakingEventId = string & { __brand: 'StakingEventId' };

/** Represents the table public.StakingEvent */
export default interface StakingEventTable {
  id: ColumnType<StakingEventId, StakingEventId | undefined, StakingEventId>;

  transaction: ColumnType<string, string, string>;

  timestamp: ColumnType<Date, Date | string, Date | string>;

  userAddress: ColumnType<string, string, string>;

  amount: ColumnType<bigint, bigint, bigint>;

  tokenAddress: ColumnType<string, string, string>;

  action: ColumnType<string, string, string>;

  contractAddress: ColumnType<string, string, string>;

  accountAddress: ColumnType<string | null, string | null, string | null>;
}

export type StakingEvent = Selectable<StakingEventTable>;

export type NewStakingEvent = Insertable<StakingEventTable>;

export type StakingEventUpdate = Updateable<StakingEventTable>;
